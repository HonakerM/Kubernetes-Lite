# Makefile for python interface for package dynamic.
# File is generated by gopy. Do not edit.
# gopy pkg k8s.io/client-go/dynamic

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/Users/michaelhonaker/.pyenv/shims/python
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = "-I/usr/local/opt/python@3.11/Frameworks/Python.framework/Versions/3.11/include/python3.11"
LDFLAGS = "-L/usr/local/opt/python@3.11/Frameworks/Python.framework/Versions/3.11/lib" "-lpython3.11" -ldl  -framework CoreFoundation 

all: gen build

gen:
	gopy pkg -no-make k8s.io/client-go/dynamic

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm dynamic.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w dynamic.go
	# generate dynamic_go$(LIBEXT) from dynamic.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o dynamic_go$(LIBEXT) dynamic.go
	# use pybindgen to build the dynamic.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _dynamic$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated dynamic.py python wrapper imports this c-code package
	
	$(GCC) dynamic.c -dynamiclib dynamic_go$(LIBEXT) -o _dynamic$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


