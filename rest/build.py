# python build stubs for package rest
# File is generated by gopy. Do not edit.
# gopy pkg k8s.io/client-go/rest

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_rest')
mod.add_include('"rest_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('pkix_RelativeDistinguishedNameSET_CTor', retval('int64_t'), [])
mod.add_function('pkix_RelativeDistinguishedNameSET_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('pkix_RelativeDistinguishedNameSET_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('pkix_RelativeDistinguishedNameSET_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('pkix_RelativeDistinguishedNameSET_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('pkix_RelativeDistinguishedNameSET_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('asn1_ObjectIdentifier_CTor', retval('int64_t'), [])
mod.add_function('asn1_ObjectIdentifier_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('asn1_ObjectIdentifier_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('asn1_ObjectIdentifier_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('asn1_ObjectIdentifier_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('asn1_ObjectIdentifier_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('asn1_RawContent_CTor', retval('int64_t'), [])
mod.add_function('asn1_RawContent_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('asn1_RawContent_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('asn1_RawContent_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('asn1_RawContent_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('asn1_RawContent_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('net_IP_CTor', retval('int64_t'), [])
mod.add_function('net_IP_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('net_IP_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('net_IP_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('net_IP_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('net_IP_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('net_IPMask_CTor', retval('int64_t'), [])
mod.add_function('net_IPMask_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('net_IPMask_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('net_IPMask_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('net_IPMask_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('net_IPMask_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('http_Header_CTor', retval('int64_t'), [])
mod.add_function('http_Header_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('http_Header_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('http_Header_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('http_Header_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('http_Header_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('http_Header_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('textproto_MIMEHeader_CTor', retval('int64_t'), [])
mod.add_function('textproto_MIMEHeader_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('textproto_MIMEHeader_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('textproto_MIMEHeader_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('textproto_MIMEHeader_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('textproto_MIMEHeader_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('textproto_MIMEHeader_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('url_Values_CTor', retval('int64_t'), [])
mod.add_function('url_Values_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('url_Values_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('url_Values_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('url_Values_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('url_Values_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('url_Values_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Array_32_byte_CTor', retval('int64_t'), [])
mod.add_function('Array_32_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Array_32_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Array_32_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_Ptr_x509_Certificate_CTor', retval('int64_t'), [])
mod.add_function('Slice_Ptr_x509_Certificate_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Ptr_x509_Certificate_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Ptr_x509_Certificate_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Ptr_x509_Certificate_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_x509_Certificate_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_multipart_FileHeader_CTor', retval('int64_t'), [])
mod.add_function('Slice_Ptr_multipart_FileHeader_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Ptr_multipart_FileHeader_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Ptr_multipart_FileHeader_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Ptr_multipart_FileHeader_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_multipart_FileHeader_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_net_IPNet_CTor', retval('int64_t'), [])
mod.add_function('Slice_Ptr_net_IPNet_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Ptr_net_IPNet_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Ptr_net_IPNet_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Ptr_net_IPNet_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_net_IPNet_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_http_Cookie_CTor', retval('int64_t'), [])
mod.add_function('Slice_Ptr_http_Cookie_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Ptr_http_Cookie_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Ptr_http_Cookie_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Ptr_http_Cookie_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_http_Cookie_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_url_URL_CTor', retval('int64_t'), [])
mod.add_function('Slice_Ptr_url_URL_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Ptr_url_URL_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Ptr_url_URL_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Ptr_url_URL_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Ptr_url_URL_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice__32_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice__32_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice__32_byte_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice__32_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice__32_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice__32_byte_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_Slice_Ptr_x509_Certificate_CTor', retval('int64_t'), [])
mod.add_function('Slice_Slice_Ptr_x509_Certificate_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Slice_Ptr_x509_Certificate_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Slice_Ptr_x509_Certificate_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Slice_Ptr_x509_Certificate_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Slice_Ptr_x509_Certificate_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Slice_byte_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Slice_byte_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_tls_Certificate_CTor', retval('int64_t'), [])
mod.add_function('Slice_tls_Certificate_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_tls_Certificate_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_tls_Certificate_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_tls_Certificate_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_tls_Certificate_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_tls_CurveID_CTor', retval('int64_t'), [])
mod.add_function('Slice_tls_CurveID_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_tls_CurveID_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_tls_CurveID_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_tls_CurveID_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_tls_CurveID_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_tls_SignatureScheme_CTor', retval('int64_t'), [])
mod.add_function('Slice_tls_SignatureScheme_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_tls_SignatureScheme_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_tls_SignatureScheme_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_tls_SignatureScheme_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_tls_SignatureScheme_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_x509_ExtKeyUsage_CTor', retval('int64_t'), [])
mod.add_function('Slice_x509_ExtKeyUsage_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_x509_ExtKeyUsage_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_x509_ExtKeyUsage_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_x509_ExtKeyUsage_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_x509_ExtKeyUsage_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_x509_OID_CTor', retval('int64_t'), [])
mod.add_function('Slice_x509_OID_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_x509_OID_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_x509_OID_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_x509_OID_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_x509_OID_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_pkix_AttributeTypeAndValue_CTor', retval('int64_t'), [])
mod.add_function('Slice_pkix_AttributeTypeAndValue_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_pkix_AttributeTypeAndValue_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_pkix_AttributeTypeAndValue_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_pkix_AttributeTypeAndValue_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_pkix_AttributeTypeAndValue_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_pkix_Extension_CTor', retval('int64_t'), [])
mod.add_function('Slice_pkix_Extension_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_pkix_Extension_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_pkix_Extension_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_pkix_Extension_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_pkix_Extension_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_pkix_RevokedCertificate_CTor', retval('int64_t'), [])
mod.add_function('Slice_pkix_RevokedCertificate_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_pkix_RevokedCertificate_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_pkix_RevokedCertificate_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_pkix_RevokedCertificate_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_pkix_RevokedCertificate_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_asn1_ObjectIdentifier_CTor', retval('int64_t'), [])
mod.add_function('Slice_asn1_ObjectIdentifier_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_asn1_ObjectIdentifier_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_asn1_ObjectIdentifier_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_asn1_ObjectIdentifier_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_asn1_ObjectIdentifier_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_runtime_Object_CTor', retval('int64_t'), [])
mod.add_function('Slice_runtime_Object_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_runtime_Object_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_runtime_Object_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_runtime_Object_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_runtime_Object_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_runtime_SerializerInfo_CTor', retval('int64_t'), [])
mod.add_function('Slice_runtime_SerializerInfo_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_runtime_SerializerInfo_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_runtime_SerializerInfo_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_runtime_SerializerInfo_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_runtime_SerializerInfo_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_schema_GroupVersion_CTor', retval('int64_t'), [])
mod.add_function('Slice_schema_GroupVersion_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_schema_GroupVersion_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_schema_GroupVersion_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_schema_GroupVersion_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_schema_GroupVersion_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_schema_GroupVersionKind_CTor', retval('int64_t'), [])
mod.add_function('Slice_schema_GroupVersionKind_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_schema_GroupVersionKind_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_schema_GroupVersionKind_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_schema_GroupVersionKind_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_schema_GroupVersionKind_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_s1_net_WarningHeader_CTor', retval('int64_t'), [])
mod.add_function('Slice_s1_net_WarningHeader_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_s1_net_WarningHeader_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_s1_net_WarningHeader_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_s1_net_WarningHeader_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_s1_net_WarningHeader_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_api_ExecEnvVar_CTor', retval('int64_t'), [])
mod.add_function('Slice_api_ExecEnvVar_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_api_ExecEnvVar_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_api_ExecEnvVar_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_api_ExecEnvVar_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_api_ExecEnvVar_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_big_Word_CTor', retval('int64_t'), [])
mod.add_function('Slice_big_Word_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_big_Word_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_big_Word_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_big_Word_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_big_Word_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_net_IP_CTor', retval('int64_t'), [])
mod.add_function('Slice_net_IP_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_net_IP_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_net_IP_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_net_IP_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_net_IP_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Map_schema_GroupVersionKind_reflect_Type_CTor', retval('int64_t'), [])
mod.add_function('Map_schema_GroupVersionKind_reflect_Type_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_schema_GroupVersionKind_reflect_Type_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_schema_GroupVersionKind_reflect_Type_contains', retval('bool'), [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_schema_GroupVersionKind_reflect_Type_set', None, [param('int64_t', 'handle'), param('int64_t', 'key'), param('int64_t', 'value')])
mod.add_function('Map_schema_GroupVersionKind_reflect_Type_delete', None, [param('int64_t', 'handle'), param('int64_t', '_ky')])
mod.add_function('Map_schema_GroupVersionKind_reflect_Type_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_Ptr_tls_Certificate_CTor', retval('int64_t'), [])
mod.add_function('Map_string_Ptr_tls_Certificate_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_Ptr_tls_Certificate_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Ptr_tls_Certificate_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Ptr_tls_Certificate_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_Ptr_tls_Certificate_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Ptr_tls_Certificate_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_Slice_Ptr_multipart_FileHeader_CTor', retval('int64_t'), [])
mod.add_function('Map_string_Slice_Ptr_multipart_FileHeader_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_Slice_Ptr_multipart_FileHeader_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Slice_Ptr_multipart_FileHeader_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Slice_Ptr_multipart_FileHeader_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_Slice_Ptr_multipart_FileHeader_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Slice_Ptr_multipart_FileHeader_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Map_string_Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_Slice_string_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Slice_string_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Slice_string_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_Slice_string_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_Slice_string_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_bool_CTor', retval('int64_t'), [])
mod.add_function('Map_string_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_bool_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_bool_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('bool', 'value')])
mod.add_function('Map_string_bool_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_bool_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_reflect_Type_CTor', retval('int64_t'), [])
mod.add_function('Map_string_reflect_Type_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_reflect_Type_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_reflect_Type_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_reflect_Type_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_reflect_Type_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_reflect_Type_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_string_CTor', retval('int64_t'), [])
mod.add_function('Map_string_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_string_elem', retval('char*'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('char*', 'value')])
mod.add_function('Map_string_string_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_NameMayNotBe', retval('int64_t'), [])
mod.add_function('rest_Set_NameMayNotBe', None, [param('int64_t', 'val')])
mod.add_function('rest_NameMayNotContain', retval('int64_t'), [])
mod.add_function('rest_Set_NameMayNotContain', None, [param('int64_t', 'val')])
add_checked_function(mod, 'rest_WarningHandler_HandleWarningHeader', None, [param('int64_t', '_handle'), param('int64_t', 'code'), param('char*', 'agent'), param('char*', 'text'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_WithRetry_After', None, [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('int64_t', 'r'), param('int64_t', 'resp'), param('char*', 'err'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_WithRetry_Before', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'ctx'), param('int64_t', 'r')])
add_checked_function(mod, 'rest_WithRetry_WrapPreviousError', retval('char*'), [param('int64_t', '_handle'), param('char*', 'finalErr')])
add_checked_function(mod, 'rest_AuthProvider_Login', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_AuthProvider_WrapTransport', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'arg_0')])
add_checked_function(mod, 'rest_AuthProviderConfigPersister_Persist', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'arg_0')])
add_checked_function(mod, 'rest_BackoffManager_CalculateBackoff', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'actualUrl')])
add_checked_function(mod, 'rest_BackoffManager_Sleep', None, [param('int64_t', '_handle'), param('int64_t', 'd'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_BackoffManager_UpdateBackoff', None, [param('int64_t', '_handle'), param('int64_t', 'actualUrl'), param('char*', 'err'), param('int64_t', 'responseCode'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_HTTPClient_Do', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'req')])
add_checked_function(mod, 'rest_Interface_APIVersion', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Interface_Delete', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Interface_Get', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Interface_GetRateLimiter', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Interface_Patch', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'pt')])
add_checked_function(mod, 'rest_Interface_Post', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Interface_Put', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Interface_Verb', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'verb')])
add_checked_function(mod, 'rest_ResponseWrapper_DoRaw', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'arg_0')])
add_checked_function(mod, 'rest_ResponseWrapper_Stream', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'arg_0')])
mod.add_function('rest_Config_CTor', retval('int64_t'), [])
mod.add_function('rest_Config_Host_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_Host_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_Config_APIPath_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_APIPath_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_Config_Username_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_Username_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_Config_Password_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_Password_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_Config_BearerToken_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_BearerToken_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_Config_BearerTokenFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_BearerTokenFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_Config_Impersonate_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_Impersonate_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_Config_AuthProvider_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_AuthProvider_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_Config_AuthConfigPersister_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_AuthConfigPersister_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_Config_ExecProvider_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_ExecProvider_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_Config_UserAgent_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_UserAgent_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_Config_DisableCompression_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_DisableCompression_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('rest_Config_Transport_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_Transport_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_Config_QPS_Get', retval('float'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_QPS_Set', None, [param('int64_t', 'handle'), param('float', 'val')])
mod.add_function('rest_Config_Burst_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_Burst_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_Config_RateLimiter_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_RateLimiter_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_Config_WarningHandler_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_WarningHandler_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_Config_Timeout_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_Config_Timeout_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_string_function(mod, 'rest_Config_GoString', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'rest_Config_String', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Config_TransportConfig', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('rest_RESTClient_CTor', retval('int64_t'), [])
mod.add_function('rest_RESTClient_Client_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_RESTClient_Client_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'rest_RESTClient_GetRateLimiter', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_RESTClient_Verb', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'verb')])
add_checked_function(mod, 'rest_RESTClient_Post', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_RESTClient_Put', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_RESTClient_Patch', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'pt')])
add_checked_function(mod, 'rest_RESTClient_Get', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_RESTClient_Delete', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_RESTClient_APIVersion', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('rest_Request_CTor', retval('int64_t'), [])
add_checked_function(mod, 'rest_Request_UseProtobufAsDefaultIfPreferred', retval('int64_t'), [param('int64_t', '_handle'), param('bool', 'prefersProtobuf')])
add_checked_function(mod, 'rest_Request_UseProtobufAsDefault', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Request_Verb', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'verb')])
add_checked_function(mod, 'rest_Request_Prefix', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'segments')])
add_checked_function(mod, 'rest_Request_Suffix', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'segments')])
add_checked_function(mod, 'rest_Request_Resource', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'resource')])
add_checked_function(mod, 'rest_Request_BackOff', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'manager')])
add_checked_function(mod, 'rest_Request_WarningHandler', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'handler')])
add_checked_function(mod, 'rest_Request_Throttle', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'limiter')])
add_checked_function(mod, 'rest_Request_SubResource', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'subresources')])
add_checked_function(mod, 'rest_Request_Name', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'resourceName')])
add_checked_function(mod, 'rest_Request_Namespace', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'namespace')])
add_checked_function(mod, 'rest_Request_NamespaceIfScoped', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'namespace'), param('bool', 'scoped')])
add_checked_function(mod, 'rest_Request_AbsPath', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'segments')])
add_checked_function(mod, 'rest_Request_RequestURI', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'uri')])
add_checked_function(mod, 'rest_Request_Param', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'paramName'), param('char*', 's')])
add_checked_function(mod, 'rest_Request_VersionedParams', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'obj'), param('int64_t', 'codec')])
add_checked_function(mod, 'rest_Request_SpecificallyVersionedParams', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'obj'), param('int64_t', 'codec'), param('int64_t', 'version')])
add_checked_function(mod, 'rest_Request_SetHeader', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'key'), param('int64_t', 'values')])
add_checked_function(mod, 'rest_Request_Timeout', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'd')])
add_checked_function(mod, 'rest_Request_MaxRetries', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'maxRetries')])
add_checked_function(mod, 'rest_Request_Body', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'obj')])
add_checked_function(mod, 'rest_Request_Error', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Request_URL', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Request_Watch', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'rest_Request_WatchList', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'rest_Request_Stream', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'rest_Request_Do', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
add_checked_function(mod, 'rest_Request_DoRaw', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'ctx')])
mod.add_function('rest_RequestConstructionError_CTor', retval('int64_t'), [])
add_checked_string_function(mod, 'rest_RequestConstructionError_Error', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('rest_Result_CTor', retval('int64_t'), [])
add_checked_function(mod, 'rest_Result_Raw', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Result_Get', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Result_Into', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'obj')])
add_checked_function(mod, 'rest_Result_Error', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_Result_Warnings', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('rest_WarningWriterOptions_CTor', retval('int64_t'), [])
mod.add_function('rest_WarningWriterOptions_Deduplicate_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('rest_WarningWriterOptions_Deduplicate_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('rest_WarningWriterOptions_Color_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('rest_WarningWriterOptions_Color_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('rest_NoWarnings_CTor', retval('int64_t'), [])
add_checked_function(mod, 'rest_NoWarnings_HandleWarningHeader', None, [param('int64_t', '_handle'), param('int64_t', 'code'), param('char*', 'agent'), param('char*', 'message'), param('bool', 'goRun')])
mod.add_function('rest_TLSClientConfig_CTor', retval('int64_t'), [])
mod.add_function('rest_TLSClientConfig_Insecure_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_Insecure_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('rest_TLSClientConfig_ServerName_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_ServerName_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_TLSClientConfig_CertFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_CertFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_TLSClientConfig_KeyFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_KeyFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_TLSClientConfig_CAFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_CAFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_TLSClientConfig_CertData_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_CertData_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_TLSClientConfig_KeyData_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_KeyData_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_TLSClientConfig_CAData_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_CAData_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_TLSClientConfig_NextProtos_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_TLSClientConfig_NextProtos_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_string_function(mod, 'rest_TLSClientConfig_GoString', retval('char*'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'rest_TLSClientConfig_String', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'rest_TLSClientConfig_DeepCopyInto', None, [param('int64_t', '_handle'), param('int64_t', 'out'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_TLSClientConfig_DeepCopy', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('rest_ContentConfig_CTor', retval('int64_t'), [])
mod.add_function('rest_ContentConfig_AcceptContentTypes_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_ContentConfig_AcceptContentTypes_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_ContentConfig_ContentType_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_ContentConfig_ContentType_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_ContentConfig_GroupVersion_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_ContentConfig_GroupVersion_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_ContentConfig_NegotiatedSerializer_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_ContentConfig_NegotiatedSerializer_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_NoBackoff_CTor', retval('int64_t'), [])
add_checked_function(mod, 'rest_NoBackoff_UpdateBackoff', None, [param('int64_t', '_handle'), param('int64_t', 'actualUrl'), param('char*', 'err'), param('int64_t', 'responseCode'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_NoBackoff_CalculateBackoff', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'actualUrl')])
add_checked_function(mod, 'rest_NoBackoff_Sleep', None, [param('int64_t', '_handle'), param('int64_t', 'd'), param('bool', 'goRun')])
mod.add_function('rest_URLBackoff_CTor', retval('int64_t'), [])
mod.add_function('rest_URLBackoff_Backoff_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_URLBackoff_Backoff_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'rest_URLBackoff_Disable', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_URLBackoff_UpdateBackoff', None, [param('int64_t', '_handle'), param('int64_t', 'actualUrl'), param('char*', 'err'), param('int64_t', 'responseCode'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_URLBackoff_CalculateBackoff', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'actualUrl')])
add_checked_function(mod, 'rest_URLBackoff_Sleep', None, [param('int64_t', '_handle'), param('int64_t', 'd'), param('bool', 'goRun')])
mod.add_function('rest_WatchListResult_CTor', retval('int64_t'), [])
add_checked_function(mod, 'rest_WatchListResult_Into', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'obj')])
mod.add_function('rest_ClientContentConfig_CTor', retval('int64_t'), [])
mod.add_function('rest_ClientContentConfig_AcceptContentTypes_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_ClientContentConfig_AcceptContentTypes_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_ClientContentConfig_ContentType_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_ClientContentConfig_ContentType_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_ClientContentConfig_GroupVersion_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_ClientContentConfig_GroupVersion_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_ClientContentConfig_Negotiator_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_ClientContentConfig_Negotiator_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_ImpersonationConfig_CTor', retval('int64_t'), [])
mod.add_function('rest_ImpersonationConfig_UserName_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_ImpersonationConfig_UserName_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_ImpersonationConfig_UID_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_ImpersonationConfig_UID_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_ImpersonationConfig_Groups_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_ImpersonationConfig_Groups_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_ImpersonationConfig_Extra_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_ImpersonationConfig_Extra_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_RetryAfter_CTor', retval('int64_t'), [])
mod.add_function('rest_RetryAfter_Wait_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_RetryAfter_Wait_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_RetryAfter_Attempt_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('rest_RetryAfter_Attempt_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('rest_RetryAfter_Reason_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('rest_RetryAfter_Reason_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('rest_WarningLogger_CTor', retval('int64_t'), [])
add_checked_function(mod, 'rest_WarningLogger_HandleWarningHeader', None, [param('int64_t', '_handle'), param('int64_t', 'code'), param('char*', 'agent'), param('char*', 'message'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_AddUserAgent', retval('int64_t'), [param('int64_t', 'config'), param('char*', 'userAgent')])
add_checked_function(mod, 'rest_AnonymousClientConfig', retval('int64_t'), [param('int64_t', 'config')])
add_checked_function(mod, 'rest_InClusterConfig', retval('int64_t'), [])
add_checked_function(mod, 'rest_CopyConfig', retval('int64_t'), [param('int64_t', 'config')])
add_checked_function(mod, 'rest_ExecClusterToConfig', retval('int64_t'), [param('int64_t', 'cluster')])
add_checked_function(mod, 'rest_UnversionedRESTClientForConfigAndClient', retval('int64_t'), [param('int64_t', 'config'), param('int64_t', 'httpClient')])
add_checked_function(mod, 'rest_NewRESTClient', retval('int64_t'), [param('int64_t', 'baseURL'), param('char*', 'versionedAPIPath'), param('int64_t', 'config'), param('int64_t', 'rateLimiter'), param('int64_t', 'client')])
add_checked_function(mod, 'rest_UnversionedRESTClientFor', retval('int64_t'), [param('int64_t', 'config')])
add_checked_function(mod, 'rest_RESTClientFor', retval('int64_t'), [param('int64_t', 'config')])
add_checked_function(mod, 'rest_RESTClientForConfigAndClient', retval('int64_t'), [param('int64_t', 'config'), param('int64_t', 'httpClient')])
add_checked_function(mod, 'rest_NewRequest', retval('int64_t'), [param('int64_t', 'c')])
add_checked_function(mod, 'rest_NewRequestWithClient', retval('int64_t'), [param('int64_t', 'base'), param('char*', 'versionedAPIPath'), param('int64_t', 'content'), param('int64_t', 'client')])
add_checked_function(mod, 'rest_GetAuthProvider', retval('int64_t'), [param('char*', 'clusterAddress'), param('int64_t', 'apc'), param('int64_t', 'persister')])
add_checked_function(mod, 'rest_IsValidPathSegmentName', retval('int64_t'), [param('char*', 'name')])
add_checked_string_function(mod, 'rest_DefaultVersionedAPIPath', retval('char*'), [param('char*', 'apiPath'), param('int64_t', 'groupVersion')])
add_checked_function(mod, 'rest_ConfigToExecCluster', retval('int64_t'), [param('int64_t', 'config')])
add_checked_string_function(mod, 'rest_DefaultKubernetesUserAgent', retval('char*'), [])
add_checked_function(mod, 'rest_CodecFactoryForGeneratedClient', retval('int64_t'), [param('int64_t', 'scheme'), param('int64_t', 'codecs')])
add_checked_function(mod, 'rest_LoadTLSFiles', retval('char*'), [param('int64_t', 'c')])
add_checked_function(mod, 'rest_SetKubernetesDefaults', retval('char*'), [param('int64_t', 'config')])
add_checked_function(mod, 'rest_SetDefaultWarningHandler', None, [param('int64_t', 'l'), param('bool', 'goRun')])
add_checked_function(mod, 'rest_TransportFor', retval('int64_t'), [param('int64_t', 'config')])
add_checked_function(mod, 'rest_TLSConfigFor', retval('int64_t'), [param('int64_t', 'config')])
add_checked_function(mod, 'rest_HTTPClientFor', retval('int64_t'), [param('int64_t', 'config')])
add_checked_function(mod, 'rest_HTTPWrappersForConfig', retval('int64_t'), [param('int64_t', 'config'), param('int64_t', 'rt')])
add_checked_function(mod, 'rest_ValidatePathSegmentName', retval('int64_t'), [param('char*', 'name'), param('bool', 'prefix')])
add_checked_function(mod, 'rest_IsValidPathSegmentPrefix', retval('int64_t'), [param('char*', 'name')])
add_checked_function(mod, 'rest_IsConfigTransportTLS', retval('bool'), [param('int64_t', 'config')])
mod.add_function('fake_RESTClient_CTor', retval('int64_t'), [])
mod.add_function('fake_RESTClient_NegotiatedSerializer_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('fake_RESTClient_NegotiatedSerializer_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('fake_RESTClient_GroupVersion_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('fake_RESTClient_GroupVersion_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('fake_RESTClient_VersionedAPIPath_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('fake_RESTClient_VersionedAPIPath_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('fake_RESTClient_Req_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('fake_RESTClient_Req_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('fake_RESTClient_Client_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('fake_RESTClient_Client_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('fake_RESTClient_Resp_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('fake_RESTClient_Resp_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'fake_RESTClient_Get', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'fake_RESTClient_Put', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'fake_RESTClient_Patch', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'pt')])
add_checked_function(mod, 'fake_RESTClient_Post', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'fake_RESTClient_Delete', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'fake_RESTClient_Verb', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'verb')])
add_checked_function(mod, 'fake_RESTClient_APIVersion', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'fake_RESTClient_GetRateLimiter', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'fake_RESTClient_Request', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('s2_watch_Decoder_CTor', retval('int64_t'), [])
add_checked_function(mod, 's2_watch_Decoder_Close', None, [param('int64_t', '_handle'), param('bool', 'goRun')])
mod.add_function('s2_watch_Encoder_CTor', retval('int64_t'), [])
add_checked_function(mod, 's2_watch_Encoder_Encode', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'event')])
add_checked_function(mod, 'watch_NewDecoder', retval('int64_t'), [param('int64_t', 'decoder'), param('int64_t', 'embeddedDecoder')])
add_checked_function(mod, 'watch_NewEncoder', retval('int64_t'), [param('int64_t', 'encoder'), param('int64_t', 'embeddedEncoder')])

mod.generate(open('rest.c', 'w'))

